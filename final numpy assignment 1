{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "61560d59",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "78b9df8f",
   "metadata": {},
   "outputs": [],
   "source": [
    "t=np.genfromtxt(r\"C:\\Users\\akhil\\Downloads\\train_extended.csv\",delimiter=\",\",skip_header=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "832ebd80",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 1.575     ,  1.225     ,  0.375     , ...,  6.3219385 ,\n",
       "         9.63883   , 10.        ],\n",
       "       [ 1.2375    ,  1.        ,  0.375     , ...,  3.798833  ,\n",
       "         7.654365  , 19.        ],\n",
       "       [ 1.45      ,  1.1625    ,  0.4125    , ...,  7.01650125,\n",
       "         7.257472  , 11.        ],\n",
       "       ...,\n",
       "       [ 1.125     ,  0.9125    ,  0.2875    , ...,  1.984465  ,\n",
       "         3.118445  ,  7.        ],\n",
       "       [ 1.625     ,  1.275     ,  0.4125    , ...,  7.86698625,\n",
       "        10.489315  , 11.        ],\n",
       "       [ 1.5875    ,  1.25      ,  0.3875    , ...,  7.38504475,\n",
       "         8.788345  , 11.        ]])"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "fab033b6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The maximum length is:  7.58349125\n",
      "The minimum length is:  0.0\n"
     ]
    }
   ],
   "source": [
    "# 1. What is the maximum and minimum length\n",
    "x = np.max(t[:,0])\n",
    "y = np.min(t[:,0])\n",
    "print(\"The maximum length is: \", x)\n",
    "print(\"The minimum length is: \", y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "f378d377",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The difference between maximum and minimum length is:  7.58349125\n"
     ]
    }
   ],
   "source": [
    "# 2. Find out the difference between maximum and minimum length\n",
    "print(\"The difference between maximum and minimum length is: \", x-y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "69761476",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Average length is:  1.3124480799562501\n",
      "Average diameter is:  1.020320357165\n",
      "Average height is:  0.34602787104999994\n",
      "Average weight is:  23.123436312982403\n",
      "Average shucked weight is:  9.989370248049001\n",
      "Average viscera weight is:  4.993180956748749\n",
      "Average shell weight is:  6.634229147607001\n",
      "Average age is:  9.950615\n"
     ]
    }
   ],
   "source": [
    "# 3. Find column wise average\n",
    "print(\"Average length is: \", np.average(t[:,0]))\n",
    "print(\"Average diameter is: \", np.average(t[:,1]))\n",
    "print(\"Average height is: \", np.average(t[:,2]))\n",
    "print(\"Average weight is: \", np.average(t[:,3]))\n",
    "print(\"Average shucked weight is: \", np.average(t[:,4]))\n",
    "print(\"Average viscera weight is: \", np.average(t[:,5]))\n",
    "print(\"Average shell weight is: \", np.average(t[:,6]))\n",
    "print(\"Average age is: \", np.average(t[:,7]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "46b68093",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The ages with height > 0.4 are:  [11. 14. 13. ... 11. 11. 11.]\n"
     ]
    }
   ],
   "source": [
    "# 4. Find out all the ages whose height > 0.4\n",
    "print(\"The ages with height > 0.4 are: \", t[:,7][t[:,2]>0.4])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "071a0151",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The average height is:  0.3833672856539947\n",
      "The average weight is:  28.243308450511314\n"
     ]
    }
   ],
   "source": [
    "# 5. What is the average height and weight of persons whose age is 10\n",
    "print(\"The average height is: \",np.average(t[:,2][t[:,7]==10]))\n",
    "print(\"The average weight is: \",np.average(t[:,3][t[:,7]==10]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "bbd42c6c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total shell weight is:  1326845.8295214002\n"
     ]
    }
   ],
   "source": [
    "# 6.What is the total shell weight\n",
    "print(\"Total shell weight is: \", np.sum(t[:,6]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "fe29cf3c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([ 1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13.,\n",
       "        14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26.,\n",
       "        27., 29.]),\n",
       " array([   46,    42,   625,  2787,  5475, 12450, 18276, 26818, 32906,\n",
       "        30803, 23457, 12717, 10037,  6352,  4831,  3191,  2705,  1953,\n",
       "         1591,  1206,   721,   296,   352,   110,    51,    46,    99,\n",
       "           57], dtype=int64))"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 7. How many persons belong to each and every unique age\n",
    "np.unique(t[:,-1],return_counts=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "4d620128",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The difference between shucked weight and viscera weight is:  999237.8582600503\n"
     ]
    }
   ],
   "source": [
    "# 8. What is the difference between shucked weight and viscera weight\n",
    "print(\"The difference between shucked weight and viscera weight is: \", np.sum(t[:,4])-np.sum(t[:,5]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "aa6f3657",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The average height of persons whose age is between 14 and 19 is:  0.4190701892744479\n"
     ]
    }
   ],
   "source": [
    "# 9. what is the average height of persons whose age is between 14 and 19\n",
    "print(\"The average height of persons whose age is between 14 and 19 is: \", np.average(t[:,2][(t[:,-1]>14) & (t[:,-1]<19)]))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "e0909627",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The average of shuckedweight,visceraweight,shellweight is: 4323356.07048095\n"
     ]
    }
   ],
   "source": [
    "# 10. What is the average weight of shucked weight, viscera weight, shell weight\n",
    "print(\"The average of shuckedweight,visceraweight,shellweight is:\", np.average(np.sum(t[:,-2])+np.sum(t[:,-3])+np.sum(t[:,-4])))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5bfbca55",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
